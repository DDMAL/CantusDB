server {
    # redirect all http traffic to corresponding canonical https page
    listen 80;

    server_name staging.cantusdatabase.org staging-alias.cantusdatabase.org;

    server_tokens off;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/lego;
    }

    location / {
        return 301 https://staging.cantusdatabase.org$request_uri;
    }
}

server {
    # Redirect all https traffic for staging-alias.cantusdatabase.org to staging.cantusdatabase.org
    # (on Production, this redirects from mass.cantusdatabase.org to cantusdatabase.org.
    # The Staging server's subdomain "staging-alias" is analogous to Production's "mass" subdomain.)
    listen 443 ssl;

    server_name staging-alias.cantusdatabase.org;

    ssl_certificate /etc/nginx/ssl/live/certificates/staging.cantusdatabase.org.crt;
    ssl_certificate_key /etc/nginx/ssl/live/certificates/staging.cantusdatabase.org.key;

    location / {
        return 301 https://staging.cantusdatabase.org$request_uri;
    }
}

server {
    listen 443 http2 ssl;

    server_name staging.cantusdatabase.org;

    ssl_certificate /etc/nginx/ssl/live/certificates/staging.cantusdatabase.org.crt;
    ssl_certificate_key /etc/nginx/ssl/live/certificates/staging.cantusdatabase.org.key;

    location / {
        proxy_pass http://django:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static {
        alias /resources/static/;
    }
    location /media {
        alias /resources/media/;
    }

    location /concordances {
        alias /resources/api_cache/concordances.json;
        expires modified +24h;
    }

    location = /style.css {
        root /;
    }
    location = /background.jpg {
        root /;
    }
    location = /CantusLogoSmall.gif {
        root /;
    }
    location = /favicon.ico {
        root /;
    }

    error_page 502 /502.html;
    location = /502.html {
        root /;
    }
    error_page 504 /504.html;
    location = /504.html {
        root /;
    }
}

# Default server to block requests to IP address and non-valid hostnames
server {
    access_log off; 
    server_name _;

    listen 80 default_server;
    listen 443 default_server;
    ssl_reject_handshake on;

    # Close connection immediately for requests that don't match a defined
    # server name
    return 444;
}
